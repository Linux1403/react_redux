{"ast":null,"code":"/*\r\n    该文件专门用于暴露一个store对象 整个应用只有一个store对象\r\n*/\n// 引入createStore 专门用于创建redux中最为核心的store对象\nimport { createStore, applyMiddleware, combineReducers } from 'redux'; // 引入为Count组件服务的reducer\n\nimport countReducer from '../redux/reducers/count'; // 引入为Person组件服务的reducer\n\nimport PersonReducer from '../redux/reducers/person'; // 有异步任务 引入redux-thunk 用于支持异步action\n\nimport thunk from 'redux-thunk'; // 引入redux-devtools-extension  开发者工具的使用\n\nimport { composeWithDevTools } from 'redux-devtools-extension'; // 汇总所有的reducer变为一个\n// combineReducers是个函数 他传入的对象就是redux帮我们保存的总状态的对象\n// 保存两个数值 count组件求和的数值 person组件一堆人的信息 数组\n\nconst allReducer = combineReducers({\n  count: countReducer,\n  persons: PersonReducer\n}); // 暴露store\n\nexport default createStore(allReducer, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["C:/Users/jshuang/myreduxapp/src/redux/store.js"],"names":["createStore","applyMiddleware","combineReducers","countReducer","PersonReducer","thunk","composeWithDevTools","allReducer","count","persons"],"mappings":"AAAA;AACA;AACA;AAEA;AACA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,yBAAzB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AACA,SAAQC,mBAAR,QAAkC,0BAAlC,C,CAGA;AACA;AACA;;AACA,MAAMC,UAAU,GAAGL,eAAe,CAAC;AAC/BM,EAAAA,KAAK,EAACL,YADyB;AAE/BM,EAAAA,OAAO,EAACL;AAFuB,CAAD,CAAlC,C,CAKA;;AAEA,eAAeJ,WAAW,CAACO,UAAD,EAAYD,mBAAmB,CAACL,eAAe,CAACI,KAAD,CAAhB,CAA/B,CAA1B","sourcesContent":["/*\r\n    该文件专门用于暴露一个store对象 整个应用只有一个store对象\r\n*/\r\n\r\n// 引入createStore 专门用于创建redux中最为核心的store对象\r\nimport {createStore,applyMiddleware,combineReducers} from 'redux'\r\n\r\n// 引入为Count组件服务的reducer\r\nimport countReducer from '../redux/reducers/count'\r\n// 引入为Person组件服务的reducer\r\nimport PersonReducer from '../redux/reducers/person'\r\n\r\n// 有异步任务 引入redux-thunk 用于支持异步action\r\nimport thunk from 'redux-thunk'\r\n\r\n// 引入redux-devtools-extension  开发者工具的使用\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n\r\n// 汇总所有的reducer变为一个\r\n// combineReducers是个函数 他传入的对象就是redux帮我们保存的总状态的对象\r\n// 保存两个数值 count组件求和的数值 person组件一堆人的信息 数组\r\nconst allReducer = combineReducers({\r\n    count:countReducer,\r\n    persons:PersonReducer\r\n})\r\n\r\n// 暴露store\r\n\r\nexport default createStore(allReducer,composeWithDevTools(applyMiddleware(thunk)))"]},"metadata":{},"sourceType":"module"}